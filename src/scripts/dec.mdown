
# 名字

	## 基于webGL的3D动态可视化场景设计


# 思路

	## 来源于工作生活


# 特色

	## 3D数据可视化（现有的数据可视化多是以2D为主，3D的数据可视化类库并不多，有的大多也只是以）

	## virtual dom 避免了频繁操作dom节点造成的页面回流\重绘

	## 多平台


# 实现方法

	## ubuntu 服务器系统

	## node 服务器环境

	## gulp 任务处理工具

	## webGL 页面3D渲染接口

	## threeJS 图形3D引擎


# 进度总控 40%


# 内容
	以下为步骤类
	## 1、control.js ---> 用于控制步骤的总控部分

	以下为方法类
	## 2、node.js ---> 用于生成图形节点,读取json数据，用于生成过去保存的节点，也是为了作为类库插入网页中的保证。

	## 3、draw.js ---> 绘图类，解析图形节点，响应事件

	## 4、nodeBindDom.js ---> 传入node.js中封装的类的实例用以生成用于生成dom节点所需信息

	## 5、toolBar.js ---> 用于生成真实的dom节点

	## 6、timeTrack.js ---> 用于生成单个图形节点的时间轴，记录图形节点运动的时间戳，

	## 7、timeTrackControl.js ---> 用于生成单个时间轴的总控页面，在此实例中控制timeTrack实例的产生

	## 8、timeTrackPageControl.js ---> 用于生成tab页以控制timeTrackControl(需求来源：group节点包含多个子节点，因此详细设置其中节点之时用以切换到timeTrackControl.js去设置单个节点)


#使用方法

	点击左区域的图形节点类型，在中上部区域


#代码仓库 

	https://github.com/slhslh/graduation


#演示地址

	http://139.129.235.177:8888/